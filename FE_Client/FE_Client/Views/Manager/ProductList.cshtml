@model List<API.DTO.ProductDTO>

@{
    ViewData["Title"] = "Product List";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</head>
<body>
    <h1>Product list</h1>
    <div class="search-form">
        <input type="text" class="search-input" id="searchProductName" placeholder="Search by Product Name">
        <button class="search-button" onclick="searchProducts()">Search</button>
    </div>
    <div style="margin-bottom:10px">
        <a href="AddProduct">
            <button class="add-button">Nhập hàng</button>
        </a>
    </div>
    <div id="productListDiv">
        @if (Model.Count > 0)
        {
            <table class="table product-table">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Product Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Status</th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model)
                    {
                        <tr id="productRow_@product.ProductId">
                            <td>@product.ProductId</td>
                            <td>@product.ProductName</td>
                            <td>@product.Quantity</td>
                            <td>@product.Price</td>
                            <td>
                                @if (product.Status == true)
                                {
                                    <span class="status available">Available</span>
                                }
                                else
                                {
                                    <span class="status sold-out">Sold Out</span>
                                }
                            </td>
                            <td><a class="detail-link" href="ProductDetail?productId=@product.ProductId">Detail</a></td>
                            <td>
                                <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#addQuantityModal_@product.ProductId">Add Quantity</a>
                            </td>
                            <td>
                                <a href="javascript:void(0);" class="detail-link" onclick="showQuantityHistory(@product.ProductId)">Detail Quantity</a>

                            </td>
                            <td>
                                <a href="javascript:void(0);" class="detail-link" onclick="showDashboard(@product.ProductId)">Dashboard</a>
                            </td>
                            <td>
                                <button class="btn btn-danger" onclick="deleteProduct(@product.ProductId)">Delete</button>
                            </td>
                        </tr>
                        <div class="modal fade" id="addQuantityModal_@product.ProductId" tabindex="-1" role="dialog" aria-labelledby="addQuantityModalLabel_@product.ProductId" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="addQuantityModalLabel_@product.ProductId">Add Quantity for @product.ProductName</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <input type="number" id="quantityInput_@product.ProductId" class="form-control" placeholder="Enter quantity">
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-primary" onclick="addQuantity(@product.ProductId)">Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal fade" id="quantityDetailModal_@product.ProductId" tabindex="-1" role="dialog" aria-labelledby="quantityDetailModalLabel_@product.ProductId" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="quantityDetailModalLabel_@product.ProductId">Quantity Detail for @product.ProductName</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body" id="quantityDetailModalContent_@product.ProductId">
                                        <!-- Lịch sử thay đổi số lượng sẽ được hiển thị tại đây -->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal fade" id="dashboardModal_@product.ProductId" tabindex="-1" role="dialog" aria-labelledby="dashboardModalLabel_@product.ProductId" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="dashboardModalLabel_@product.ProductId">Dashboard for @product.ProductName</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <canvas id="dashboardChart_@product.ProductId" width="400" height="200"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </tbody>
            </table>
            @if (ViewBag.TotalPages > 1)
            {
                <ul class="pagination">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("ProductList", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ProductList", new { page = i, pageSize = ViewBag.PageSize })">@i</a>
                        </li>
                    }

                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("ProductList", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })">Next</a>
                        </li>
                    }
                </ul>
            }
        }
        else
        {
            <p>No products found.</p>
        }
    </div>
    @section Scripts {
        <script>
            function searchProducts() {
                var searchProductName = document.getElementById("searchProductName").value;
                var apiUrl = `http://localhost:5000/api/Product/GetProductByProductName?productName=${searchProductName}`;

                fetch(apiUrl)
                    .then(response => response.text())
                    .then(html => {
                        var productListDiv = document.getElementById("productListDiv");
                        productListDiv.innerHTML = html;  // Replace the productListDiv content with search results
                    })
                    .catch(error => console.error('Error:', error));
            }
        </script>
        <script>
            function deleteProduct(productId) {
                console.log("Deleting product with ID:", productId);
                if (confirm("Are you sure you want to delete this product?")) {
                    var url = `http://localhost:5000/api/Product/DeleteProductById?id=${productId}`;

                    fetch(url, {
                        method: 'DELETE'
                    })
                        .then(response => {
                            if (response.ok) {
                                // Remove the row from the table if the delete request was successful
                                var row = document.querySelector(`#productRow_${productId}`);
                                if (row) {
                                    row.remove();
                                }
                            } else {
                                console.error('Delete request failed:', response.status);
                            }
                        })
                        .catch(error => console.error('Error:', error));
                }
            }
        </script>
        <script>
            function addQuantity(productId) {
                var quantity = parseInt(document.getElementById("quantityInput_" + productId).value);
                if (!isNaN(quantity) && quantity > 0) {
                    var url = `http://localhost:5000/api/Product/UpdateQuantityProduct?productId=${productId}&newQuantity=${quantity}`;

                    fetch(url, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(response => response.json())
                        .then(result => {
                            updateProductRow(productId, result.Quantity);
                        })
                        .catch(error => console.error('Error:', error));
                }
            }

            function updateProductRow(productId, newQuantity) {
                var quantityColumn = document.getElementById("quantity_" + productId);

                if (quantityColumn) {
                    quantityColumn.textContent = newQuantity;
                    $("#addQuantityModal_" + productId).modal("hide");
                } else {
                    console.error("Element with ID 'quantity_" + productId + "' not found.");
                }
            }

            function showQuantityHistory(productId) {
                var url = `http://localhost:5000/api/Product/GetQuantityHistory?productId=${productId}`;

                fetch(url)
                    .then(response => response.json())
                    .then(history => {
                        showQuantityDetailModal(productId, history);
                    })
                    .catch(error => console.error('Error:', error));
            }

            function showQuantityDetailModal(productId, history) {
                var modalContent = "<h5>Lịch sử Số lượng cho Sản phẩm có ID " + productId + "</h5>";
                modalContent += "<table class='table'>";
                modalContent += "<thead><tr><th>Action</th><th>Change</th><th>Date</th></tr></thead>";
                modalContent += "<tbody>";

                history.forEach(item => {
                    modalContent += "<tr>";
                    modalContent += "<td>" + item.action + "</td>";
                    modalContent += "<td>" + item.change + "</td>";
                    modalContent += "<td>" + item.date + "</td>";
                    modalContent += "</tr>";
                });

                modalContent += "</tbody></table>";

                $("#quantityDetailModalContent_" + productId).html(modalContent);
                $("#quantityDetailModal_" + productId).modal("show");
            }
        </script>
        <script>
            function showDashboard(productId) {
                var url = `http://localhost:5000/api/Product/GetQuantityHistory?productId=${productId}`;

                fetch(url)
                    .then(response => response.json())
                    .then(history => {
                        var labels = history.map(item => item.date);
                        var data = history.map(item => item.change);

                        var ctx = document.getElementById(`dashboardChart_${productId}`).getContext('2d');
                        var chart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: labels,
                                datasets: [{
                                    label: 'Change in Quantity',
                                    data: data,
                                    borderColor: 'rgb(75, 192, 192)',
                                    borderWidth: 2
                                }]
                            },
                            options: {
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            }
                        });

                        $(`#dashboardModal_${productId}`).modal('show');
                    })
                    .catch(error => console.error('Error:', error));
            }

            function createQuantityChart(productId, history) {
                // Prepare data for the chart
                var labels = history.map(item => item.date);
                var data = history.map(item => {
                    if (item.action === "Update") {
                        return item.change;
                    } else if (item.action === "Delete") {
                        return -item.change;
                    }
                    return 0;
                });

                // Create a line chart
                var ctx = document.getElementById(`quantityChart_${productId}`).getContext('2d');
                var quantityChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Change in Quantity',
                            data: data,
                            fill: false,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1,
                        }],
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                            },
                        },
                    },
                });
            }
        </script>

    }
    <style>
        /* Reset some default styles */
        body, h1, h2, h3, p {
            margin: 0;
            padding: 0;
        }

        /* Main container styles */
        .container {
            max-width: 1500px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Page title styles */
        .page-title {
            font-size: 24px;
            margin-bottom: 20px;
        }

        /* Search form styles */
        .search-form {
            margin-bottom: 20px;
        }

        .search-input {
            padding: 10px;
            width: 70%;
            border: 1px solid #ccc;
            border-radius: 5px 0 0 5px;
        }

        .search-button {
            padding: 10px 20px;
            border: none;
            background-color: #3f51b5;
            color: #fff;
            border-radius: 0 5px 5px 0;
            cursor: pointer;
        }

        /* Product table styles */
        .product-table {
            width: 100%;
            border-collapse: collapse;
        }

            .product-table th, .product-table td {
                padding: 10px;
                text-align: left;
                border-bottom: 1px solid #ccc;
            }

            .product-table th {
                background-color: #f2f2f2;
                font-weight: bold;
            }

        .detail-link {
            color: #3f51b5;
            text-decoration: none;
        }

        /* Status styles */
        .status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 5px;
            font-weight: bold;
        }

        .available {
            background-color: #4caf50;
            color: #fff;
        }

        .sold-out {
            background-color: #f44336;
            color: #fff;
        }

        /* Pagination styles */
        .pagination {
            list-style: none;
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .page-item {
            margin: 0 5px;
        }

        .page-link {
            padding: 5px 10px;
            border: 1px solid #ccc;
            text-decoration: none;
            color: #333;
            border-radius: 5px;
        }

            .page-link.active {
                background-color: #3f51b5;
                color: #fff;
                border: 1px solid #3f51b5;
            }

        .add-button {
            padding: 10px 20px;
            border: none;
            background-color: #3f51b5;
            color: #fff;
            border-radius: 5px;
            cursor: pointer;
        }

        .add-quantity-button {
            padding: 5px 10px;
            background-color: #4caf50;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        /* Status styles */
        .status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 5px;
            font-weight: bold;
        }

        .available {
            background-color: #4caf50;
            color: #fff;
        }

        .sold-out {
            background-color: #f44336;
            color: #fff;
        }

        /* Pagination styles */
        .pagination {
            list-style: none;
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .page-item {
            margin: 0 5px;
        }

        .page-link {
            padding: 5px 10px;
            border: 1px solid #ccc;
            text-decoration: none;
            color: #333;
            border-radius: 5px;
        }

            .page-link.active {
                background-color: #3f51b5;
                color: #fff;
                border: 1px solid #3f51b5;
            }
    </style>
</body>
</html>


